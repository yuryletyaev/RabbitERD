#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã RabbitMQ ERD Visualizer
"""
import asyncio
import json
from rabbitmq_client import RabbitMQClient

async def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open('config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = RabbitMQClient(config)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–º–µ–Ω–æ–≤...")
        exchanges = await client.get_exchanges()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±–º–µ–Ω–æ–≤: {len(exchanges)}")
        
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–µ–π...")
        queues = await client.get_queues()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—á–µ—Ä–µ–¥–µ–π: {len(queues)}")
        
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–æ–∫...")
        bindings = await client.get_bindings()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–≤—è–∑–æ–∫: {len(bindings)}")
        
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Ç–æ–ø–æ–ª–æ–≥–∏–∏...")
        topology = await client.get_topology()
        print(f"‚úÖ –¢–æ–ø–æ–ª–æ–≥–∏—è –ø–æ–ª—É—á–µ–Ω–∞: {len(topology.get('connections', []))} —Å–≤—è–∑–µ–π")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python run.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RabbitMQ –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ config.json")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Management Plugin –≤–∫–ª—é—á–µ–Ω")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 15672")

if __name__ == "__main__":
    asyncio.run(test_connection())
