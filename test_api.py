#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API RabbitMQ ERD Visualizer
–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –±–µ–∑ –±—Ä–∞—É–∑–µ—Ä–∞
"""
import asyncio
import aiohttp
import json
from pathlib import Path

async def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API RabbitMQ ERD Visualizer")
    print("=" * 50)
    
    async with aiohttp.ClientSession() as session:
        try:
            # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("üìÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            async with session.get(f"{base_url}/") as response:
                if response.status == 200:
                    print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: OK")
                    content = await response.text()
                    if "RabbitMQ ERD Visualizer" in content:
                        print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞–π–¥–µ–Ω")
                    else:
                        print("‚ö†Ô∏è  –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status}")
            
            # –¢–µ—Å—Ç API —Ç–æ–ø–æ–ª–æ–≥–∏–∏
            print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ç–æ–ø–æ–ª–æ–≥–∏–∏...")
            async with session.get(f"{base_url}/api/topology") as response:
                if response.status == 200:
                    print("‚úÖ API —Ç–æ–ø–æ–ª–æ–≥–∏–∏: OK")
                    data = await response.json()
                    print(f"üìä –î–∞–Ω–Ω—ã–µ: {len(data.get('exchanges', []))} –æ–±–º–µ–Ω–æ–≤, {len(data.get('queues', []))} –æ—á–µ—Ä–µ–¥–µ–π")
                else:
                    print(f"‚ùå API —Ç–æ–ø–æ–ª–æ–≥–∏–∏: {response.status}")
            
            # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
            print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
            async with session.get(f"{base_url}/static/style.css") as response:
                if response.status == 200:
                    print("‚úÖ CSS —Ñ–∞–π–ª: OK")
                else:
                    print(f"‚ùå CSS —Ñ–∞–π–ª: {response.status}")
            
            print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
        except aiohttp.ClientConnectorError:
            print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:8000")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ: python3 main.py")
    print("-" * 50)
    
    try:
        asyncio.run(test_api())
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
